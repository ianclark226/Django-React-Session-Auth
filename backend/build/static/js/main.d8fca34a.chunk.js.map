{"version":3,"sources":["actions/types.js","actions/profile.js","components/Navbar.js","actions/auth.js","components/Layout.js","containers/Home.js","components/CSRFToken.js","containers/Register.js","containers/Login.js","containers/Dashboard.js","reducers/auth.js","reducers/index.js","Store.js","App.js","reportWebVitals.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","load_user","dispatch","a","config","headers","axios","get","process","res","data","error","type","payload","connect","state","isAuthenticated","auth","logout","Cookies","body","JSON","stringify","post","success","username","authLinks","className","to","onClick","href","guestLinks","exact","id","checkAuthenticated","children","useEffect","Navbar","Home","CSRFToken","useState","csrftoken","setcsrftoken","fetchData","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","value","register","password","re_password","formData","setFormData","accountCreated","setAccountCreated","onChange","e","target","onSubmit","preventDefault","placeholder","required","minLength","login","Dashboard","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8fca34a.chunk.js","sourcesContent":["// Auth Dispatch States\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n\n// Profile Dispatch States\nexport const LOAD_USER_PROFILE_SUCCESS = 'LOAD_USER_PROFILE_SUCCESS';\nexport const LOAD_USER_PROFILE_FAIL = 'LOAD_USER_PROFILE_FAIL';","import Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport {\n    LOAD_USER_PROFILE_FAIL,\n    LOAD_USER_PROFILE_SUCCESS\n} from './types';\n\nexport const load_user = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \n        }\n    };\n\n    try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`, config);\n\n        if(res.data.error) {\n            dispatch({\n                type: LOAD_USER_PROFILE_FAIL\n                \n            })\n        } else {\n\n        dispatch({\n            type: LOAD_USER_PROFILE_SUCCESS,\n            payload: res.data\n        })\n    }\n\n    } catch (err) {\n        dispatch({\n            type: LOAD_USER_PROFILE_FAIL\n            \n        })\n    }\n\n};","import React, { Fragment } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\nconst navbar = ({ isAuthenticated, logout }) => {\n    const authLinks = (\n        <Fragment>\n            <li className='nav-item'>\n                <NavLink className='nav-link' to='/dashboard'>Dashboard</NavLink>\n            </li>\n            <li className='nav-item'>\n                <a className='nav-link' onClick={logout} href='#!'>Logout</a>\n            </li>\n        </Fragment>\n    );\n\n    const guestLinks = (\n        <Fragment>\n            <li className='nav-item'>\n                <NavLink className='nav-link' to='/login'>Login</NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink className='nav-link' to='/register'>Register</NavLink>\n            </li>\n        </Fragment>\n    );\n\n    return (\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n            <div className='container-fluid'>\n                <Link className='navbar-brand' exact to='/'>Session Auth</Link>\n                <button \n                    className='navbar-toggler' \n                    type='button' \n                    data-bs-toggle='collapse' \n                    data-bs-target='#navbarNav' \n                    aria-controls='navbarNav' \n                    aria-expanded='false' \n                    aria-label='Toggle navigation'\n                >\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse' id='navbarNav'>\n                    <ul className='navbar-nav'>\n                        <li className='nav-item'>\n                            <NavLink className='nav-link' exact to='/'>Home</NavLink>\n                        </li>\n                        { isAuthenticated ? authLinks : guestLinks }\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { logout })(navbar);","import axios from 'axios';\nimport {\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT_FAIL,\n    LOGOUT_SUCCESS,\n    AUTHENTICATED_FAIL,\n    AUTHENTICATED_SUCCESS\n} from './types';\nimport Cookies from 'js-cookie';\nimport { load_user } from './profile';\n\nexport const checkAuthenticated = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \n        }\n    };\n\n    \n\n    try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/authenticated`,  config);\n\n        if(res.data.error || res.data.isAuthenticated === 'error') {\n            dispatch({\n                type: AUTHENTICATED_FAIL,\n                payload: false\n            })\n        }\n        else if (res.data.isAuthenticated === 'success') {\n            dispatch({\n                type: AUTHENTICATED_SUCCESS,\n                payload: true\n            })\n        }\n        \n\n        else {\n            dispatch({\n                type: AUTHENTICATED_FAIL,\n                payload: false\n            })\n        }\n    } catch(err) {\n        dispatch({\n            type: AUTHENTICATED_FAIL,\n            payload: false\n        })\n    }\n};\n\nexport const login = (username, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ username, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`, body, config);\n\n        if (res.data.success) {\n            dispatch({\n                type: LOGIN_SUCCESS\n            });\n\n            dispatch(load_user());\n        } else {\n            dispatch({\n                type: LOGIN_FAIL\n            });\n        }\n    } catch(err) {\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n};\n\nexport const logout = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({\n        'withCredentials': true\n    })\n\n \n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`, body, config)\n\n        if(res.data.success) {\n            dispatch({\n                type: LOGOUT_SUCCESS,\n                payload: res.data.username\n            });\n\n            //load the user\n        } else {\n            dispatch({\n                type: LOGOUT_FAIL\n            })\n        }\n    } catch(err) {\n        dispatch({\n            type: LOGOUT_FAIL\n        })\n    }\n}\n\n\nexport const register = (username, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ username, password, re_password});\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`, body, config);\n\n        if (res.data.error) {\n            dispatch({\n                type: REGISTER_FAIL\n            })\n        } else {\n            dispatch({\n                type: REGISTER_SUCCESS\n            })\n        }\n    } catch (err) {\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}","import React, {Fragment, useEffect} from 'react';\nimport Navbar from './Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated } from '../actions/auth';\nimport { load_user } from '../actions/profile';\n\nconst Layout = ({ children, checkAuthenticated, load_user }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, [])\n    return (\n        <Fragment>\n            <Navbar />\n            {children}\n        </Fragment>\n    )\n}\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"mt-5 p-5 bg-light\">\n                <h1 className=\"display-4\">Welcome to Session Auth</h1>\n                <p className=\"lead\">\n                    This is a wonderful applicaiton with session authentication in React and Django.\n                </p>\n                <hr className=\"my-4\"></hr>\n                <p>Click the button below to log in.</p>\n                <Link className=\"btn btn-primary btn-lg\" to=\"/login\">Login</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CSRFToken = () => {\n    const [csrftoken, setcsrftoken] = useState('');\n\n    const getCookie = (name) => {\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            let cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                let cookie = cookies[i].trim();\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                await axios.get(`${process.env.REACT_APP_API_URL}/accounts/csrf_cookie`);\n            } catch (err) {\n\n            }\n        };\n\n        fetchData();\n        setcsrftoken(getCookie('csrftoken'));\n    }, []);\n\n    return (\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrftoken} />\n    );\n};\n\nexport default CSRFToken;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { register } from '../actions/auth';\nimport { Navigate, Link } from 'react-router-dom';\nimport CSRFToken from '../components/CSRFToken';\n\nconst Register = ({ register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        username: '',\n        password: '',\n        re_password: ''\n    });\n    const [accountCreated, setAccountCreated] = useState(false);\n\n    const { username, password, re_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if(password === re_password) {\n            register(username, password, re_password);\n            setAccountCreated(true);\n\n        }\n    };\n\n    if(isAuthenticated) {\n        return <Navigate to=\"/dashboard\" />\n    }\n    else if(accountCreated) {\n        return <Navigate to=\"/login\" />;\n    \n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Register for an Account</h1>\n            <p>Create an account with our Session Auth application</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <CSRFToken />\n                <div className=\"form-group\">\n                    <label className=\"form-label\">Username: </label>\n                    <input \n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"Enter Username*\"\n                    name=\"username\"\n                    onChange={e => onChange(e)}\n                    value={username}\n                    required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-label mt-3\">Password: </label>\n                    <input \n                    className=\"form-control\"\n                    type=\"password\"\n                    placeholder=\"Enter Password*\"\n                    name=\"password\"\n                    onChange={e => onChange(e)}\n                    value={password}\n                    minLength=\"6\"\n                    required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-label mt-3\">Confirm Password: </label>\n                    <input \n                    className=\"form-control\"\n                    type=\"password\"\n                    placeholder=\"Confirm Password*\"\n                    name=\"re_password\"\n                    onChange={e => onChange(e)}\n                    value={re_password}\n                    minLength=\"6\"\n                    required\n                    />\n                </div>\n                <button className=\"btn btn-primary mt-4\" type=\"submit\">Register</button>\n            </form>\n            <p className=\"mt-3\">Already have an account? <Link to=\"/login\">Login</Link></p>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { register })(Register);","import React, { useState } from 'react';\nimport { Navigate, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport CSRFToken from '../components/CSRFToken';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        username: '',\n        password: ''\n    });\n\n    const { username, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(username, password);\n    };\n\n    if (isAuthenticated)\n        return <Navigate to='/dashboard' />;\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <p>Sign into your Session Auth account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <CSRFToken />\n                <div className='form-group'>\n                    <label className='form-label'>Username: </label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Username*'\n                        name='username'\n                        onChange={e => onChange(e)}\n                        value={username}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <label className='form-label mt-3'>Password: </label>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        onChange={e => onChange(e)}\n                        value={password}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary mt-3' type='submit'>Login</button>\n            </form>\n            <p className='mt-3'>\n                Don't have an Account? <Link to='/register'>Sign Up</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\n\nconst Dashboard = () => {\n    return (\n        <div>\n            Dashboard\n        </div>\n    )\n}\n\nexport default Dashboard;","/* eslint-disable no-unused-vars */\n/* eslint-disable import/no-anonymous-default-export */\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL\n    \n    \n} from '../actions/types';\n\nconst initialState = {\n    isAuthenticated: null,\n    \n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: payload\n            }\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                \n            }\n        case LOGOUT_SUCCESS:\n        \n            return {\n                ...state,\n                isAuthenticated: false,\n                \n            }\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT_FAIL:\n        \n            return state\n        default:\n            return state\n    };\n};","import { combineReducers } from \"redux\";\nimport auth from './auth';\nimport profile from './profile';\n\nexport default combineReducers({\n    auth\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initalState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initalState,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport Home from './containers/Home';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\nimport Dashboard from './containers/Dashboard';\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n    <Router>\n      <Layout>\n        <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route exact path=\"/register\" element={<Register />} />\n        <Route exact path=\"/login\" element={<Login />} />\n        <Route exact path=\"/dashboard\" element={<Dashboard />} />\n        </Routes>\n      </Layout>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}